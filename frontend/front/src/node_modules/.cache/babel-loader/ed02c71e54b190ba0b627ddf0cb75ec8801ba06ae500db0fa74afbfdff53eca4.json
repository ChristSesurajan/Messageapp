{"ast":null,"code":"var _jsxFileName = \"D:\\\\visualcode\\\\myapp\\\\frontend\\\\front\\\\src\\\\api\\\\messageap.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState, useEffect } from 'react';\nimport API_ENDPOINT from './../api/index.js';\nimport { UserContext } from './../context/UserContext';\nimport { useNavigate } from 'react-router-dom';\nimport { rid } from './searchus.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Message() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [error, setError] = useState('');\n  let [senderId, setSenderId] = useState(); // Initialize as null\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const {\n    username\n  } = useContext(UserContext);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (rid) {\n      setSelectedUserId(rid);\n    }\n    console.log(rid);\n  }, [rid]);\n  useEffect(() => {\n    fetchMessages();\n  }, []);\n  const fetchMessages = async () => {\n    try {\n      const response = await fetch(`${API_ENDPOINT}/messages`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch messages');\n      }\n      const data = await response.json();\n      setMessages(data);\n    } catch (error) {\n      console.error('Error fetching messages:', error);\n      setError(error.message);\n    }\n  };\n  const fetchUserId = async () => {\n    try {\n      const response = await fetch(`${API_ENDPOINT}/messages?username=${username}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch user ID');\n      }\n      const data = await response.json();\n      console.log(data.user.id);\n      setSenderId(data.user.id);\n      senderId = data.user.id;\n      console.log(senderId);\n    } catch (error) {\n      console.error('Error fetching user ID:', error);\n      setError(error.message);\n    }\n  };\n  useEffect(() => {\n    if (username) {\n      fetchUserId();\n    }\n  }, [username]);\n  const sendMessage = async () => {\n    console.log(senderId);\n    if (!senderId || !newMessage) {\n      setError('Sender ID and message are required');\n      return;\n    }\n    try {\n      const response = await fetch(`${API_ENDPOINT}/messages`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          sender_id: senderId,\n          recipient_id: selectedUserId,\n          message: newMessage\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to send message');\n      }\n      setNewMessage('');\n      fetchMessages();\n    } catch (error) {\n      console.error('Error sending message:', error);\n      setError(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: '600px',\n      margin: 'auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Messaging App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red',\n        textAlign: 'center'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        style: {\n          fontSize: '16px',\n          paddingLeft: '100px',\n          float: 'left'\n        },\n        placeholder: \"Type a message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        style: {\n          marginBottom: '10px',\n          marginLeft: '10px',\n          fontSize: '16px'\n        },\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          listStyle: 'none',\n          padding: '0'\n        },\n        children: messages.map(message => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            textAlign: message.sender_id === senderId ? 'right' : 'left',\n            marginBottom: '10px',\n            padding: '10px',\n            borderRadius: '5px',\n            backgroundColor: message.sender_id === senderId ? '#DCF8C6' : '#EAEAEA'\n          },\n          children: message.message\n        }, message.message_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n_s(Message, \"Gjj4ufgIuuul9FAeIU6t5z6dmbU=\", false, function () {\n  return [useNavigate];\n});\n_c = Message;\nexport default Message;\nvar _c;\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"names":["React","useContext","useState","useEffect","API_ENDPOINT","UserContext","useNavigate","rid","jsxDEV","_jsxDEV","Message","_s","messages","setMessages","newMessage","setNewMessage","error","setError","senderId","setSenderId","selectedUserId","setSelectedUserId","username","navigate","console","log","fetchMessages","response","fetch","ok","Error","data","json","message","fetchUserId","user","id","sendMessage","method","headers","body","JSON","stringify","sender_id","recipient_id","style","maxWidth","margin","children","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","color","display","alignItems","type","value","onChange","e","target","fontSize","paddingLeft","float","placeholder","onClick","marginBottom","marginLeft","listStyle","padding","map","borderRadius","backgroundColor","message_id","_c","$RefreshReg$"],"sources":["D:/visualcode/myapp/frontend/front/src/api/messageap.js"],"sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\r\nimport API_ENDPOINT from './../api/index.js';\r\nimport { UserContext } from './../context/UserContext';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { rid } from './searchus.js';\r\n\r\nfunction Message() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [error, setError] = useState('');\r\n  let [senderId, setSenderId] = useState(); // Initialize as null\r\n  const [selectedUserId, setSelectedUserId] = useState(0);\r\n  const { username } = useContext(UserContext);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (rid) {\r\n      setSelectedUserId(rid);\r\n    }\r\n    console.log(rid);\r\n  }, [rid]);\r\n\r\n  useEffect(() => {\r\n    fetchMessages();\r\n  }, []);\r\n\r\n  const fetchMessages = async () => {\r\n    try {\r\n      const response = await fetch(`${API_ENDPOINT}/messages`);\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch messages');\r\n      }\r\n      const data = await response.json();\r\n      setMessages(data);\r\n    } catch (error) {\r\n      console.error('Error fetching messages:', error);\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const fetchUserId = async () => {\r\n    try {\r\n      const response = await fetch(`${API_ENDPOINT}/messages?username=${username}`);\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch user ID');\r\n      }\r\n      const data = await response.json();\r\n      console.log(data.user.id)\r\n      setSenderId(data.user.id);\r\n      senderId=data.user.id ;\r\n      console.log(senderId);\r\n    } catch (error) {\r\n      console.error('Error fetching user ID:', error);\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (username) {\r\n      fetchUserId();\r\n    }\r\n  }, [username]);\r\n\r\n  const sendMessage = async () => {\r\n      console.log(senderId)\r\n    if (!senderId || !newMessage) {\r\n      setError('Sender ID and message are required');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`${API_ENDPOINT}/messages`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ sender_id: senderId, recipient_id: selectedUserId, message: newMessage }),\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error('Failed to send message');\r\n      }\r\n      setNewMessage('');\r\n      fetchMessages();\r\n    } catch (error) {\r\n      console.error('Error sending message:', error);\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ maxWidth: '600px', margin: 'auto' }}>\r\n      <h1 style={{ textAlign: 'center' }}>Messaging App</h1>\r\n      {error && <div style={{ color: 'red', textAlign: 'center' }}>{error}</div>}\r\n      <div style={{ display: 'flex', alignItems: 'center' }}>\r\n        <input\r\n          type=\"text\"\r\n          value={newMessage}\r\n          onChange={(e) => setNewMessage(e.target.value)}\r\n          style={{ fontSize: '16px', paddingLeft: '100px', float: 'left' }}\r\n          placeholder=\"Type a message...\"\r\n        />\r\n        <button onClick={sendMessage} style={{ marginBottom: '10px', marginLeft: '10px', fontSize: '16px' }}>\r\n          Send\r\n        </button>\r\n      </div>\r\n      <div>\r\n        <ul style={{ listStyle: 'none', padding: '0' }}>\r\n          {messages.map((message) => (\r\n            <li\r\n              key={message.message_id}\r\n              style={{\r\n                textAlign: message.sender_id === senderId ? 'right' : 'left',\r\n                marginBottom: '10px',\r\n                padding: '10px',\r\n                borderRadius: '5px',\r\n                backgroundColor: message.sender_id === senderId ? '#DCF8C6' : '#EAEAEA',\r\n              }}\r\n            >\r\n              {message.message}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Message;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}