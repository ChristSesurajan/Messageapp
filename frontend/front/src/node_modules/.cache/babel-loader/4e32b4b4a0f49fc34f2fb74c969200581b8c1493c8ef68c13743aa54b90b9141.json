{"ast":null,"code":"var _jsxFileName = \"D:\\\\visualcode\\\\myapp\\\\frontend\\\\front\\\\src\\\\api\\\\messageap.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState, useEffect } from 'react';\nimport API_ENDPOINT from './../api/index.js';\nimport { UserContext } from './../context/UserContext';\nimport { useNavigate } from 'react-router-dom';\nimport UserSearch from './searchus.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Message() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [error, setError] = useState('');\n  const [senderId, setSenderId] = useState(1); // Default sender ID, change this based on logged-in user\n  const [selectedUserId, setSelectedUserId] = useState(null);\n  const {\n    username\n  } = useContext(UserContext);\n  const navigate = useNavigate();\n  const handleUserClick = userId => {\n    console.log('Selected user ID:', userId);\n    setSelectedUserId(userId);\n    navigate('/messages');\n  };\n  useEffect(() => {\n    fetchMessages();\n  }, []);\n  const fetchMessages = async () => {\n    try {\n      const response = await fetch(`${API_ENDPOINT}/messages`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch messages');\n      }\n      const data = await response.json();\n      setMessages(data);\n    } catch (error) {\n      console.error('Error fetching messages:', error);\n      setError(error.message);\n    }\n  };\n  const sendMessage = async () => {\n    if (!senderId || !newMessage || !selectedUserId) {\n      setError('Sender ID, recipient ID, and message are required');\n      return;\n    }\n    try {\n      const response = await fetch(`${API_ENDPOINT}/messages`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          sender_id: senderId,\n          recipient_id: selectedUserId,\n          message: newMessage\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to send message');\n      }\n      setNewMessage('');\n      fetchMessages();\n    } catch (error) {\n      console.error('Error sending message:', error);\n      setError(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: '600px',\n      margin: 'auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(UserSearch, {\n      onUserClick: handleUserClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Messaging App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red',\n        textAlign: 'center'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        style: {\n          fontSize: '16px',\n          paddingLeft: '100px',\n          float: 'left'\n        },\n        placeholder: \"Type a message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        style: {\n          marginBottom: '10px',\n          marginLeft: '10px',\n          fontSize: '16px'\n        },\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          listStyle: 'none',\n          padding: '0'\n        },\n        children: messages.map(message => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            textAlign: message.sender_id === senderId ? 'right' : 'left',\n            marginBottom: '10px',\n            padding: '10px',\n            borderRadius: '5px',\n            backgroundColor: message.sender_id === senderId ? '#DCF8C6' : '#EAEAEA'\n          },\n          children: message.message\n        }, message.message_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(Message, \"rW8Ucxa74QCt0BFGad0rxKpal4M=\", false, function () {\n  return [useNavigate];\n});\n_c = Message;\nexport default Message;\nvar _c;\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"names":["React","useContext","useState","useEffect","API_ENDPOINT","UserContext","useNavigate","UserSearch","jsxDEV","_jsxDEV","Message","_s","messages","setMessages","newMessage","setNewMessage","error","setError","senderId","setSenderId","selectedUserId","setSelectedUserId","username","navigate","handleUserClick","userId","console","log","fetchMessages","response","fetch","ok","Error","data","json","message","sendMessage","method","headers","body","JSON","stringify","sender_id","recipient_id","style","maxWidth","margin","children","onUserClick","fileName","_jsxFileName","lineNumber","columnNumber","textAlign","color","display","alignItems","type","value","onChange","e","target","fontSize","paddingLeft","float","placeholder","onClick","marginBottom","marginLeft","listStyle","padding","map","borderRadius","backgroundColor","message_id","_c","$RefreshReg$"],"sources":["D:/visualcode/myapp/frontend/front/src/api/messageap.js"],"sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\r\nimport API_ENDPOINT from './../api/index.js';\r\nimport { UserContext } from './../context/UserContext';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport UserSearch from './searchus.js';\r\n\r\nfunction Message() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [senderId, setSenderId] = useState(1); // Default sender ID, change this based on logged-in user\r\n  const [selectedUserId, setSelectedUserId] = useState(null);\r\n  const { username } = useContext(UserContext);\r\n  const navigate = useNavigate();\r\n\r\n  const handleUserClick = (userId) => {\r\n    console.log('Selected user ID:', userId);\r\n    setSelectedUserId(userId);\r\n    navigate('/messages');\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchMessages();\r\n  }, []);\r\n\r\n  const fetchMessages = async () => {\r\n    try {\r\n      const response = await fetch(`${API_ENDPOINT}/messages`);\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch messages');\r\n      }\r\n      const data = await response.json();\r\n      setMessages(data);\r\n    } catch (error) {\r\n      console.error('Error fetching messages:', error);\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const sendMessage = async () => {\r\n    if (!senderId || !newMessage || !selectedUserId) {\r\n      setError('Sender ID, recipient ID, and message are required');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`${API_ENDPOINT}/messages`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ sender_id: senderId, recipient_id: selectedUserId, message: newMessage })\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error('Failed to send message');\r\n      }\r\n      setNewMessage('');\r\n      fetchMessages();\r\n    } catch (error) {\r\n      console.error('Error sending message:', error);\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ maxWidth: '600px', margin: 'auto' }}>\r\n      <UserSearch onUserClick={handleUserClick} />\r\n      <h1 style={{ textAlign: 'center' }}>Messaging App</h1>\r\n      {error && <div style={{ color: 'red', textAlign: 'center' }}>{error}</div>}\r\n      <div style={{ display: 'flex', alignItems: 'center' }}>\r\n        <input\r\n          type=\"text\"\r\n          value={newMessage}\r\n          onChange={(e) => setNewMessage(e.target.value)}\r\n          style={{ fontSize: '16px', paddingLeft: '100px', float: 'left' }}\r\n          placeholder=\"Type a message...\"\r\n        />\r\n        <button onClick={sendMessage} style={{ marginBottom: '10px', marginLeft: '10px', fontSize: '16px' }}>\r\n          Send\r\n        </button>\r\n      </div>\r\n      <div>\r\n        <ul style={{ listStyle: 'none', padding: '0' }}>\r\n          {messages.map((message) => (\r\n            <li\r\n              key={message.message_id}\r\n              style={{\r\n                textAlign: message.sender_id === senderId ? 'right' : 'left',\r\n                marginBottom: '10px',\r\n                padding: '10px',\r\n                borderRadius: '5px',\r\n                backgroundColor: message.sender_id === senderId ? '#DCF8C6' : '#EAEAEA',\r\n              }}\r\n            >\r\n              {message.message}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Message;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}